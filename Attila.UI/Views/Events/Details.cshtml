
@{
    ViewData["Title"] = "Event Details";
}

@model ViewEventCVM

<div class="container-fluid">
    <div class="card shadow mb-3">
        <div class="card-header py-3">
            <div class="row">
                <div class="col-sm-3 col-md-3 col-lg-3 col-xl-3">
                    <h5 class="text-dark mb-4">Event Details</h5>
                </div>

                <div class="col-sm-9 col-md-9 col-lg-9 col-xl-9 text-right">
                    <p class="text-primary m-0 font-weight-bold">
                        @{
                            if (Model.EventDetails.EventStatus == Status.Processing)
                            {
                                <a class="btn btn-primary btn-sm" href="/Events/Update?EventID=@(Model.EventDetails.ID)">Edit</a>
                                <a class="btn btn-primary btn-sm" href="/Events/MenuForm?EventID=@(Model.EventDetails.ID)">Add Menu Details</a>
                                <a class="btn btn-primary btn-sm" href="/Events/Additional?EventID=@(Model.EventDetails.ID)">Add Additionals</a>
                                <a class="btn btn-primary btn-sm" href="/Events/ChangeEventStatusToForApproval?EventID=@(Model.EventDetails.ID)"><i class="fa fa-share-square-o" aria-hidden="true"></i> Submit for Approval</a>
                            }

                            if (Model.EventDetails.EventStatus == Status.ForApproval)
                            {
                                if (User.IsInRole(AccessRole.Admin))
                                {
                                    <button class="btn btn-primary btn-sm" id="btnApprove" type="button">Approve</button>
                                    <button class="btn btn-primary btn-sm" id="btnDecline" type="button">Decline</button>
                                }
                                else
                                {
                                    <label>Awaiting for approval</label>
                                }
                            }

                            if (Model.EventDetails.EventStatus == Status.Approved)
                            {
                                if (User.IsInRole(AccessRole.InventoryManager))
                                {
                                    <br />
                                    <a class="btn btn-primary btn-sm" href="/Events/MarkAsCheckingRequirements?EventID=@(Model.EventDetails.ID)">Mark as Checking Requirements</a>
                                }
                                else
                                {
                                    <label class="text-primary m-0 font-weight-bold"> Event Status: @Html.DisplayFor(a => a.EventDetails.EventStatus) </label>
                                    <label>Awaiting for requirements</label>
                                }
                            }

                            if (Model.EventDetails.EventStatus == Status.CheckingRequirements)
                            {
                                if (User.IsInRole(AccessRole.InventoryManager))
                                {
                                    <br />
                                    <a class="btn btn-primary btn-sm" href="/Events/MarkAsRequirementsComplete?EventID=@(Model.EventDetails.ID)">Mark as Requirements Complete</a>
                                }
                                else
                                {
                                    <label class="text-primary m-0 font-weight-bold"> Event Status: @Html.DisplayFor(a => a.EventDetails.EventStatus) </label>
                                    <label>Awaiting for requirements</label>
                                }
                            }

                            if (Model.EventDetails.EventStatus == Status.RequirementsComplete)
                            {
                                if (User.IsInRole(AccessRole.Coordinator))
                                {
                                    <button class="btn btn-primary btn-sm" id="btnComplete" type="button">Complete Event</button>
                                    <button class="btn btn-primary btn-sm" id="btnCancel" type="button">Cancel Event</button>
                                }
                            }

                            if (Model.EventDetails.EventStatus == Status.Completed)
                            {
                                <label class="text-primary m-0 font-weight-bold"> Event Status: @Html.DisplayFor(a => a.EventDetails.EventStatus) </label>

                                if (User.IsInRole("Coordinator"))
                                {
                                    if (Model.TotalPayment >= Model.TotalCharge)
                                    {
                                        <br />
                                        <button class="btn btn-primary btn-sm" id="btnClose" type="button">Close Event</button>
                                    }
                                    else
                                    {
                                        <br />
                                        <label class="text-primary m-0 font-weight-bold"> Payment Status: Not Yet Fully Paid  </label> <br />
                                        <a class="btn btn-primary btn-sm" href="/Payment/AddPayment?EventID=@(Model.EventDetails.ID)">Add Payment</a>
                                    }

                                }
                            }

                            if (Model.EventDetails.EventStatus.ToString() == "Declined")
                            {
                                <label class="text-primary m-0 font-weight-bold"> Event Status: @Html.DisplayFor(a => a.EventDetails.EventStatus) </label>

                                if (User.IsInRole("Coordinator"))
                                {
                                    <br />
                                    <button class="btn btn-primary btn-sm" id="btnDelete" type="button">Delete</button>
                                }
                            }



                            if (Model.EventDetails.EventStatus.ToString() == "Cancelled")
                            {
                                <label class="text-primary m-0 font-weight-bold"> Event Status: @Html.DisplayFor(a => a.EventDetails.EventStatus) </label>
                            }

                            if (Model.EventDetails.EventStatus.ToString() == "Closed")
                            {
                                <label class="text-primary m-0 font-weight-bold"> Event Status: @Html.DisplayFor(a => a.EventDetails.EventStatus) </label>
                                <label class="text-primary m-0 font-weight-bold"> Payment Status: Fully Paid  </label>
                            }
                        }
                    </p>
                </div>
            </div>

            <div class="card-body">
                <kendo-tabstrip name="tabstrip">
                    <popup-animation>
                        <open effects="fade:in" />
                    </popup-animation>
                    <items>
                        <tabstrip-item text="Details" selected="true">
                            <content>
                                <style>
                                    .event-details span {
                                        font-weight: bold;
                                    }
                                </style>

                                <div class="container-fluid">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="event-details py-3">
                                                <div>
                                                    <label>Event Name: </label> <span>@Model.EventDetails.EventName</span>
                                                </div>
                                                <div>
                                                    <label>Client: </label> <span>@Model.EventDetails.Client.Name</span>
                                                </div>
                                                <div>
                                                    <label>Event Date: </label> <span>@Model.EventDetails.EventDate.ToString("MMM dd, yyyy")</span>
                                                </div>
                                                <div>
                                                    <label>Booking Date: </label> <span>@Model.EventDetails.BookingDate.ToString("MMM dd, yyyy")</span>
                                                </div>
                                                <div>
                                                    <label>Type: </label> <span>@Model.EventDetails.Type</span>
                                                </div>
                                                <div>
                                                    <label>Theme: </label> <span>@Model.EventDetails.Theme</span>
                                                </div>
                                                <div>
                                                    <label>Description: </label> <span>@Model.EventDetails.Description</span>
                                                </div>
                                                <hr />
                                                <div>
                                                    <label>Package: </label> <span>@Model.EventDetails.Package.Name</span>
                                                </div>

                                                <div>
                                                    <label>Number of Guests: </label> <span>@Html.DisplayFor(a => a.EventDetails.NumberOfGuests)</span>
                                                </div>
                                                <div>
                                                    <label>Remarks: </label> <span>@Html.DisplayFor(a => a.EventDetails.Remarks)</span>
                                                </div>
                                                <div>
                                                    <label>Coordinator: </label> <span>@Html.DisplayFor(a => a.EventDetails.User.Name)</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="event-details py-3">
                                                <div>
                                                    <label>Location: </label> <span>@Model.EventDetails.Location</span>
                                                </div>
                                                <div>
                                                    <label>Location Area: </label> <span>@Model.EventDetails.LocationType</span>
                                                </div>
                                                <div>
                                                    <label>Set Up Time: </label> <span>@Model.EventDetails.EntryTime.GetTimeString()</span>
                                                </div>
                                                <div>
                                                    <label>Program Starts at: </label> <span>@Model.EventDetails.ProgramStart.GetTimeString()</span>
                                                </div>
                                                <div>
                                                    <label>Serving Time: </label> <span>@Model.EventDetails.ServingTime.GetTimeString()</span>
                                                </div>
                                                <div>
                                                    <label>Serving Type: </label> <span>@Html.DisplayFor(a => a.EventDetails.ServingType)</span>
                                                </div>
                                                <div>
                                                    <label>Venue in a Building/Condominium: </label> <span>@(Model.EventDetails.VenueType ==VenueType.BuildingOrCondo ? "Yes" : "No" )</span>
                                                </div>
                                                   
                                                <hr />
                                                @if (Model.EventDetails.EventStatus.ToString() == "Declined")
                                                {
                                                    <div>
                                                        <label>Admin Remarks: </label> <span>@Html.DisplayFor(a => a.EventDetails.AdminRemarks)</span>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </content>
                        </tabstrip-item>
                        <tabstrip-item text="Menu">
                            <content>
                                <kendo-grid name="grdEventMenu">
                                    <datasource type="DataSourceTagHelperType.Ajax" server-operation="true">
                                        <transport>
                                            <read url="/Events/GetEventMenu?eventID=@(Model.EventDetails.ID)" />
                                        </transport>
                                    </datasource>
                                    <toolbar>
                                        <toolbar-button name="search"></toolbar-button>
                                    </toolbar>
                                    <search fields="@(new[] { "Name", "Category" })" />
                                    <no-records template="<p>No records found</p>" />
                                    <pageable enabled="true" refresh="true" />
                                    <columns>
                                        <column field="Name" title="Dish Name" />
                                        <column field="Category" />
                                    </columns>
                                </kendo-grid>                                   
                            </content>
                        </tabstrip-item>
                        <tabstrip-item text="Additionals">
                            <content>
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <label>Additional Duration [Hours]:</label>
                                        <span class="font-weight-bold">
                                            @{
                                                if (Model.EventDetails.AdditionalDuration == null || !Model.EventDetails.AdditionalDuration.Any())
                                                {
                                                    <span>No additional hours</span>
                                                }
                                                else
                                                {
                                                    foreach (var item in Model.EventDetails.AdditionalDuration)
                                                    {
                                                        @Html.DisplayFor(modelItem => item.Duration.Hours)
                                                    }
                                                }
                                            }
                                        </span>
                                    </div>
                                </div>                                                                       

                                <div class="card mb-3">
                                    <div class="card-header py-3">
                                        <h6 class="text-primary font-weight-bold m-0">
                                            Additional Equipment
                                        </h6>
                                    </div>
                                    <div class="card-body shadow">
                                        <kendo-grid name="grdAddlEquipment">
                                            <datasource type="DataSourceTagHelperType.Ajax" server-operation="true">
                                                <transport>
                                                    <read url="/Events/GetAdditionalEquipmentQuery?eventID=@(Model.EventDetails.ID)" />
                                                </transport>
                                            </datasource>
                                            <toolbar>
                                                <toolbar-button name="search"></toolbar-button>
                                            </toolbar>
                                            <search fields="@(new[] { "EquipmentDetails.Code", "EquipmentDetails.Name" })" />
                                            <no-records template="<p>No records found</p>" />
                                            <pageable enabled="true" refresh="true" />
                                            <columns>
                                                <column field="EquipmentDetails.Code" title="Equipment Code" />
                                                <column field="EquipmentDetails.Name" title="Equipment" />
                                                <column field="Quantity" title="Quantity" />
                                                <column field="InventoryQuantity" title="Inventory Stock" />
                                            </columns>
                                        </kendo-grid>
                                    </div>
                                </div>

                                <div class="card mb-3">
                                    <div class="card-header py-3">
                                        <h6 class="text-primary font-weight-bold m-0">Additional Dish </h6>
                                    </div>
                                    <div class="card-body shadow">
                                        <kendo-grid name="grdAddlDish">
                                            <datasource type="DataSourceTagHelperType.Ajax" server-operation="true">
                                                <transport>
                                                    <read url="/Events/GetAdditionalDishQuery?eventID=@(Model.EventDetails.ID)" />
                                                </transport>
                                            </datasource>
                                            <toolbar>
                                                <toolbar-button name="search"></toolbar-button>
                                            </toolbar>
                                            <search fields="@(new[] { "Dish.Name" })" />
                                            <no-records template="<p>No records found</p>" />
                                            <pageable enabled="true" refresh="true" />
                                            <columns>
                                                <column field="Dish.Name" title="Dish" />
                                                <column field="Quantity" title="Requested Quantity" />
                                            </columns>
                                        </kendo-grid>
                                    </div>
                                </div>
                            </content>
                        </tabstrip-item>
                    </items>
                </kendo-tabstrip>
            </div>
        </div>
    </div>
</div>


@section Scripts{

    <script>
        function OnSuccess(result) {
            if (result == true) {
                $("#successedit").modal('show');
            }

            else if (result == false) {
                alert("Failed!");
            }
        }

        function OnFailure(result) {
            alert("Failed!");
            window.location = "/Events/BookingForm";
        }

        var eventID = '@Model.EventDetails.ID';


        $(document).on('click', '#btnEdit', function (e) {
            id = $(this).val();
            var url = '@Url.Action("Update", "Events", new { EventID = "__id__"  })';
            window.location.href = url.replace('__id__', eventID)
        });

        $(document).on('click', '#btnApprove', function (e) {
            id = $(this).val();
            var url = '@Url.Action("ApproveEvent", "Events", new { EventID = "__id__"  })';
            window.location.href = url.replace('__id__', eventID)
        });

        @*$(document).on('click', ' #btnDecline', function (e) {
            id = $(this).val();
            var url = '@Url.Action("DeclineEvent", "Events", new { EventID = "__id__"  })';
            window.location.href = url.replace('__id__', eventID)
        });*@

        $('document').ready(function () {
            $('#btnDecline').on('click', function () {
                var declineRemarks = prompt("Reason of Rejecting");
                $.post('/Events/DeclineEvent', { EventID: eventID, DeclineRemarks: declineRemarks })
                    .done(function (r) {
                        window.location = "/Events/Index";
                    })
                    .fail(function (err) {
                        console.log("Fail");
                    })
            });
        })

        $(document).on('click', ' #btnDelete', function (e) {
            id = $(this).val();
            var url = '@Url.Action("DeleteEvent", "Events", new { EventID = "__id__"  })';
            window.location.href = url.replace('__id__', eventID)
        });

        $(document).on('click', ' #btnComplete', function (e) {
            id = $(this).val();
            var url = '@Url.Action("ChangeEventStatusToCompleted", "Events", new { EventID = "__id__"  })';
            window.location.href = url.replace('__id__', eventID)
        });

        $(document).on('click', ' #btnCancel', function (e) {
            id = $(this).val();
            var url = '@Url.Action("ChangeEventStatusToCancelled", "Events", new { EventID = "__id__"  })';
            window.location.href = url.replace('__id__', eventID)
        });

        $(document).on('click', ' #btnClose', function (e) {
            id = $(this).val();
            var url = '@Url.Action("ChangeEventStatusToClosed", "Events", new { EventID = "__id__"  })';
            window.location.href = url.replace('__id__', eventID)
        });

        </script>

        <partial name="_ValidationScriptsPartial" />
    }
